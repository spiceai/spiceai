---
name: e2e_test

on:
  push:
    branches:
      - trunk
      - release-*
    tags:
      - v*
    paths-ignore:
      - 'docs/**'
      - '.github/**'
  pull_request:
    branches:
      - trunk
      - release-*
  workflow_dispatch:

jobs:
  build_binaries:
    name: build spice and spiced
    runs-on: ubuntu-latest
    env:
      GOVER: 1.19
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVER }}

      - name: Build spice
        run: make
        working-directory: cmd/spice

      - name: Build spiced
        run: make
        working-directory: cmd/spiced

      - name: Upload spice
        uses: actions/upload-artifact@v3
        with:
          name: spice
          path: cmd/spice/spice

      - name: Upload spiced
        uses: actions/upload-artifact@v3
        with:
          name: spiced
          path: cmd/spiced/spiced

  cache_pip:
    name: cache_pip
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [production]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Cache PIP
        id: cache-pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('ai/src/requirements/${{ matrix.target }}.txt') }}

      - name: Generate PIP Cache
        if: steps.cache-pip.outputs.cache-hit != 'true'
        working-directory: ai/src
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install -r requirements/${{ matrix.target }}.txt

  algorithms:
    name: algorithms test
    needs: [cache_pip, build_binaries]
    runs-on: ubuntu-latest
    env:
      GOVER: 1.19
    strategy:
      fail-fast: false
      matrix:
        algorithm: [vpg, dql, sacd]
        context: [metal, docker]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        if: matrix.context == 'metal'
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Cache PIP
        if: matrix.context == 'metal'
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('ai/src/requirements/production.txt') }}

      - name: Install requirements
        if: matrix.context == 'metal'
        working-directory: ai/src
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install -r requirements/production.txt

      - name: Download spice
        uses: actions/download-artifact@v3
        with:
          name: spice
          path: .

      - name: Download spiced
        if: matrix.context == 'metal'
        uses: actions/download-artifact@v3
        with:
          name: spiced
          path: .

      - name: Build local Docker image
        if: matrix.context == 'docker'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          push: false
          tags: ghcr.io/spiceai/spiceai:local

      - name: Verify Docker images
        if: matrix.context == 'docker'
        run: |
          docker images

      - name: Ensure correct directory structure
        if: matrix.context == 'metal'
        run: |
          mkdir -p $HOME/.spice/bin
          cp ./spiced $HOME/.spice/bin/
          chmod +x $HOME/.spice/bin/spiced
          ln -s ${{ github.workspace }}/ai/src $HOME/.spice/bin/ai

      - name: Ensure correct permissions
        run: |
          chmod +x ./spice

      - name: 'Execute test - trader (algorithm: ${{ matrix.algorithm }})'
        run: |
          cp ./test/assets/data/csv/COINBASE_BTCUSD\,\ 30.csv .
          export SPICE_DEEPRL_ALGORITHM="${{ matrix.algorithm }}"
          ./spice version --context ${{ matrix.context }}
          ./spice add test/Trader@0.4.0
          ./spice train spicepods/trader.yaml --context ${{ matrix.context }}

  end-to-end:
    name: end-to-end test
    needs: [cache_pip, build_binaries]
    runs-on: ubuntu-latest
    env:
      GOVER: 1.19
    strategy:
      fail-fast: false
      matrix:
        algorithm: [vpg, dql, sacd]
        context: [metal, docker]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOVER }}

      - name: Set up Python 3.8
        if: matrix.context == 'metal'
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Cache PIP
        if: matrix.context == 'metal'
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('ai/src/requirements/production.txt') }}

      - name: Install requirements
        if: matrix.context == 'metal'
        working-directory: ai/src
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install -r requirements/production.txt

      - name: Download spice
        uses: actions/download-artifact@v3
        with:
          name: spice
          path: cmd/spice

      - name: Download spiced
        uses: actions/download-artifact@v3
        with:
          name: spiced
          path: cmd/spiced

      - name: Build local Docker image
        if: matrix.context == 'docker'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          push: false
          tags: ghcr.io/spiceai/spiceai:local

      - name: Verify Docker images
        if: matrix.context == 'docker'
        run: |
          docker images

      - name: Ensure correct directory structure
        if: matrix.context == 'metal'
        run: |
          mkdir -p $HOME/.spice/bin
          cp cmd/spiced/spiced $HOME/.spice/bin/
          chmod +x $HOME/.spice/bin/spiced
          ln -s ${{ github.workspace }}/ai/src $HOME/.spice/bin/ai

      - name: Ensure correct permissions
        run: |
          chmod +x cmd/spice/spice
          chmod +x cmd/spiced/spiced

      - name: 'Execute e2e tests (algorithm: ${{ matrix.algorithm }})'
        working-directory: test/e2e
        run: |
          go test -v . -e2e -shuffle=on -context '${{ matrix.context }}' -learning-algorithm '${{ matrix.algorithm }}'
