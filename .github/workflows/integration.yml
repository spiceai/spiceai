---
name: integration tests

on:
  pull_request:
    branches:
      - trunk
      - release-*
      - feature-*
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'version.txt'
      - 'acknowledgements.md'

  workflow_dispatch:

concurrency:
  # Allow only one workflow per any non-trunk branch.
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.ref_name == 'trunk' && github.sha || 'any-sha' }}
  cancel-in-progress: true

env:
  CONTAINER_REGISTRY: spiceaitestimages.azurecr.io/

jobs:
  build:
    name: Build Test Binary
    runs-on: spiceai-runners
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          os: 'linux'

      - name: Set up make
        uses: ./.github/actions/setup-make

      - name: Set up cc
        uses: ./.github/actions/setup-cc

      # Build the test binary without running tests
      - name: Build integration test binary
        run: |
          TEST_BINARY_PATH=$(cargo test -p runtime --test integration --features postgres,mysql,delta_lake,duckdb,sqlite --no-run --message-format=json | jq -r 'select(.reason == "compiler-artifact" and (.target.kind | contains(["test"])) and .executable != null) | .executable')
          cp $TEST_BINARY_PATH ./integration_test

      # Upload the test binary as an artifact
      - name: Upload test binary
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-binary
          path: ./integration_test
          retention-days: 1

  test:
    name: Integration Tests
    needs: build
    runs-on: spiceai-runners
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          os: 'linux'

      - name: Set up make
        uses: ./.github/actions/setup-make

      - name: Set up cc
        uses: ./.github/actions/setup-cc

      # Download the test binary artifact
      - name: Download test binary
        uses: actions/download-artifact@v4
        with:
          name: integration-test-binary
          path: ./integration_test

      - name: Mark test binary as executable
        run: |
          ls -l ./integration_test
          chmod +x ./integration_test/integration_test

      - name: Login to ACR
        uses: docker/login-action@v3
        # This will fail for forks, so we only run it for the main repo
        if: github.repository == 'spiceai/spiceai'
        with:
          registry: spiceaitestimages.azurecr.io
          username: spiceai-repo-pull
          password: ${{ secrets.AZCR_PASSWORD }}

      # Change the CONTAINER_REGISTRY to public.ecr.aws/docker/library/ if this is a fork
      - name: Use public ECR for forks
        if: github.repository != 'spiceai/spiceai'
        run: echo "CONTAINER_REGISTRY=public.ecr.aws/docker/library/" >> $GITHUB_ENV

      - name: Pull the Postgres/MySQL images
        run: |
          echo ${{ env.CONTAINER_REGISTRY }}
          docker pull ${{ env.CONTAINER_REGISTRY }}postgres:latest
          docker pull ${{ env.CONTAINER_REGISTRY }}mysql:latest

      - name: Set up Spice.ai API Key
        run: |
          echo 'SPICEAI_API_KEY="${{ secrets.SPICE_SECRET_SPICEAI_KEY }}"' > .env

      - name: Run integration test
        env:
          SPICE_SECRET_SPICEAI_KEY: ${{ secrets.SPICE_SECRET_SPICEAI_KEY }}
        run: |
          if [ -n "$SPICE_SECRET_SPICEAI_KEY" ]; then
            ./integration_test/integration_test --nocapture
          else
            ./integration_test/integration_test --nocapture --skip spiceai_integration_test
          fi
