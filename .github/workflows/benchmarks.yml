---
name: benchmark tests

on:
  workflow_dispatch:

jobs:
  build:
    name: Benchmark Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: ./.github/actions/setup-rust
        with:
          os: 'linux'

      - name: Set up Spice.ai API Key
        run: |
          echo 'SPICEAI_API_KEY="${{ secrets.SPICE_SECRET_SPICEAI_BENCHMARK_KEY }}"' > .env

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start MySQL test server
        timeout-minutes: 2
        run: |
          docker run --name spice-mysql-bench-temp -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 -d ghcr.io/spiceai/spice-mysql-bench:latest
          while true; do
            if docker exec spice-mysql-bench-temp mysqladmin ping -uroot -proot --silent; then
              echo 'MySQL is ready!'
              exit 0
            fi
            echo 'Waiting for MySQL to be ready...'
            sleep 1
          done

      - run: cargo bench -p runtime --features postgres,spark,mysql
        env:
          UPLOAD_RESULTS_DATASET: 'spiceai.tests.oss_benchmarks'
          PG_BENCHMARK_PG_HOST: ${{ secrets.SPICE_SECRET_PG_BENCHMARK_PG_HOST }}
          PG_BENCHMARK_PG_USER: ${{ secrets.SPICE_SECRET_PG_BENCHMARK_PG_USER }}
          PG_BENCHMARK_PG_PASS: ${{ secrets.SPICE_SECRET_PG_BENCHMARK_PG_PASS }}
          PG_BENCHMARK_PG_SSLMODE: ${{ secrets.SPICE_SECRET_PG_BENCHMARK_PG_SSLMODE }}
          PG_BENCHMARK_PG_DBNAME: ${{ secrets.SPICE_SECRET_PG_BENCHMARK_PG_DBNAME }}
          SPICE_SPARK_REMOTE: ${{ secrets.SPICE_SPARK_REMOTE }}
          MYSQL_BENCHMARK_MYSQL_HOST: localhost
          MYSQL_BENCHMARK_MYSQL_USER: root
          MYSQL_BENCHMARK_MYSQL_PASS: root
          MYSQL_BENCHMARK_MYSQL_DB: tpch_sf0_05
