name: Sets up the Rust toolchain
description: 'composite action'
inputs:
  os:
    description: 'Operating system to set up the toolchain for'
    default: 'linux' # 'linux', 'darwin', 'windows'

runs:
  using: "composite"
  steps:
    - name: Install Rust if not installed (Linux/macOS)
      if: inputs.os != 'windows'
      shell: bash
      run: |
        echo "${CARGO_HOME:-$HOME/.cargo}/bin" >> $GITHUB_PATH
        if [ -d $HOME/.cargo ]; then
          source $HOME/.cargo/env || true
        fi
        if ! command -v rustup &> /dev/null ; then
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
          source $HOME/.cargo/env || true
        fi

    - name: Install Rust if not installed (Windows)
      if : inputs.os == 'windows'
      shell: pwsh
      run: |
        if( (-not (get-command rustup))) {
          # TODO: Install Rust on Windows
          throw "Rustup not found"
        }

    - name: Install latest Rust stable toolchain (Linux/macOS)
      if: inputs.os != 'windows'
      shell: bash
      run: |
        rustup toolchain install stable

    - name: Install latest Rust stable toolchain (Windows)
      if: inputs.os == 'windows'
      shell: pwsh
      run: |
        rustup toolchain install stable

    - name: Install sccache
      if: inputs.os == 'linux'
      shell: bash
      run: |
        wget https://github.com/mozilla/sccache/releases/download/v0.8.1/sccache-v0.8.1-i686-unknown-linux-musl.tar.gz
        tar -xvf sccache-v0.8.1-i686-unknown-linux-musl.tar.gz
        mv sccache-v0.8.1-i686-unknown-linux-musl/sccache $HOME/.cargo/bin/sccache
        chmod +x $HOME/.cargo/bin/sccache
        rm -rf sccache-v0.8.1-i686-unknown-linux-musl.tar.gz sccache-v0.8.1-i686-unknown-linux-musl
        export SCCACHE_PATH=$HOME/.cargo/bin/sccache

    - name: Recover sccache cache
      uses: actions/cache@v3
      with:
        path: ${{env.SCCACHE_CACHE}}
        key: sccache-cache-${{runner.os}}-0-${{env.DATE_STRING}}
        restore-keys: sccache-cache-${{runner.os}}-0
    
    - name: Start sccache
      shell: bash
      working-directory: ${{github.workspace}}
      run: sccache --start-server