---
source: crates/runtime/benches/bench.rs
description: "Query: select\n    ps_partkey,\n    sum(ps_supplycost * ps_availqty) as value\nfrom\n    partsupp,\n    supplier,\n    nation\nwhere\n    ps_suppkey = s_suppkey\n  and s_nationkey = n_nationkey\n  and n_name = 'GERMANY'\ngroup by\n    ps_partkey having\n    sum(ps_supplycost * ps_availqty) > (\n    select\n    sum(ps_supplycost * ps_availqty) * 0.0001\n    from\n    partsupp,\n    supplier,\n    nation\n    where\n    ps_suppkey = s_suppkey\n                  and s_nationkey = n_nationkey\n                  and n_name = 'GERMANY'\n    )\norder by\n    value desc;"
---
+---------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| plan_type     | plan                                                                                                                                                                                                                                                                                                                                                          |
+---------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| logical_plan  | Sort: value DESC NULLS FIRST                                                                                                                                                                                                                                                                                                                                  |
|               |   Projection: partsupp.ps_partkey, sum(partsupp.ps_supplycost * partsupp.ps_availqty) AS value                                                                                                                                                                                                                                                                |
|               |     Inner Join:  Filter: CAST(sum(partsupp.ps_supplycost * partsupp.ps_availqty) AS Decimal128(38, 15)) > __scalar_sq_1.sum(partsupp.ps_supplycost * partsupp.ps_availqty) * Float64(0.0001)                                                                                                                                                                  |
|               |       Aggregate: groupBy=[[partsupp.ps_partkey]], aggr=[[sum(partsupp.ps_supplycost * CAST(partsupp.ps_availqty AS Decimal128(10, 0)))]]                                                                                                                                                                                                                      |
|               |         Projection: partsupp.ps_partkey, partsupp.ps_availqty, partsupp.ps_supplycost                                                                                                                                                                                                                                                                         |
|               |           Inner Join: supplier.s_nationkey = nation.n_nationkey                                                                                                                                                                                                                                                                                               |
|               |             Projection: partsupp.ps_partkey, partsupp.ps_availqty, partsupp.ps_supplycost, supplier.s_nationkey                                                                                                                                                                                                                                               |
|               |               Inner Join: partsupp.ps_suppkey = supplier.s_suppkey                                                                                                                                                                                                                                                                                            |
|               |                 BytesProcessedNode                                                                                                                                                                                                                                                                                                                            |
|               |                   TableScan: partsupp projection=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost]                                                                                                                                                                                                                                                         |
|               |                 BytesProcessedNode                                                                                                                                                                                                                                                                                                                            |
|               |                   TableScan: supplier projection=[s_suppkey, s_nationkey]                                                                                                                                                                                                                                                                                     |
|               |             Projection: nation.n_nationkey                                                                                                                                                                                                                                                                                                                    |
|               |               BytesProcessedNode                                                                                                                                                                                                                                                                                                                              |
|               |                 Filter: nation.n_name = Utf8("GERMANY")                                                                                                                                                                                                                                                                                                       |
|               |                   TableScan: nation projection=[n_nationkey, n_name], partial_filters=[nation.n_name = Utf8("GERMANY")]                                                                                                                                                                                                                                       |
|               |       SubqueryAlias: __scalar_sq_1                                                                                                                                                                                                                                                                                                                            |
|               |         Projection: CAST(CAST(sum(partsupp.ps_supplycost * partsupp.ps_availqty) AS Float64) * Float64(0.0001) AS Decimal128(38, 15))                                                                                                                                                                                                                         |
|               |           Aggregate: groupBy=[[]], aggr=[[sum(partsupp.ps_supplycost * CAST(partsupp.ps_availqty AS Decimal128(10, 0)))]]                                                                                                                                                                                                                                     |
|               |             Projection: partsupp.ps_availqty, partsupp.ps_supplycost                                                                                                                                                                                                                                                                                          |
|               |               Inner Join: supplier.s_nationkey = nation.n_nationkey                                                                                                                                                                                                                                                                                           |
|               |                 Projection: partsupp.ps_availqty, partsupp.ps_supplycost, supplier.s_nationkey                                                                                                                                                                                                                                                                |
|               |                   Inner Join: partsupp.ps_suppkey = supplier.s_suppkey                                                                                                                                                                                                                                                                                        |
|               |                     TableScan: partsupp projection=[ps_suppkey, ps_availqty, ps_supplycost]                                                                                                                                                                                                                                                                   |
|               |                     TableScan: supplier projection=[s_suppkey, s_nationkey]                                                                                                                                                                                                                                                                                   |
|               |                 Projection: nation.n_nationkey                                                                                                                                                                                                                                                                                                                |
|               |                   Filter: nation.n_name = Utf8("GERMANY")                                                                                                                                                                                                                                                                                                     |
|               |                     TableScan: nation projection=[n_nationkey, n_name], partial_filters=[nation.n_name = Utf8("GERMANY")]                                                                                                                                                                                                                                     |
| physical_plan | SortExec: expr=[value@1 DESC], preserve_partitioning=[false]                                                                                                                                                                                                                                                                                                  |
|               |   ProjectionExec: expr=[ps_partkey@0 as ps_partkey, sum(partsupp.ps_supplycost * partsupp.ps_availqty)@1 as value]                                                                                                                                                                                                                                            |
|               |     NestedLoopJoinExec: join_type=Inner, filter=CAST(sum(partsupp.ps_supplycost * partsupp.ps_availqty)@0 AS Decimal128(38, 15)) > sum(partsupp.ps_supplycost * partsupp.ps_availqty) * Float64(0.0001)@1                                                                                                                                                     |
|               |       CoalescePartitionsExec                                                                                                                                                                                                                                                                                                                                  |
|               |         AggregateExec: mode=FinalPartitioned, gby=[ps_partkey@0 as ps_partkey], aggr=[sum(partsupp.ps_supplycost * partsupp.ps_availqty)]                                                                                                                                                                                                                     |
|               |           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                         |
|               |             RepartitionExec: partitioning=Hash([ps_partkey@0], 4), input_partitions=4                                                                                                                                                                                                                                                                         |
|               |               AggregateExec: mode=Partial, gby=[ps_partkey@0 as ps_partkey], aggr=[sum(partsupp.ps_supplycost * partsupp.ps_availqty)]                                                                                                                                                                                                                        |
|               |                 CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                   |
|               |                   HashJoinExec: mode=Partitioned, join_type=Inner, on=[(s_nationkey@3, n_nationkey@0)], projection=[ps_partkey@0, ps_availqty@1, ps_supplycost@2]                                                                                                                                                                                             |
|               |                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                               |
|               |                       RepartitionExec: partitioning=Hash([s_nationkey@3], 4), input_partitions=4                                                                                                                                                                                                                                                              |
|               |                         CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                           |
|               |                           HashJoinExec: mode=Partitioned, join_type=Inner, on=[(ps_suppkey@1, s_suppkey@0)], projection=[ps_partkey@0, ps_availqty@2, ps_supplycost@3, s_nationkey@5]                                                                                                                                                                         |
|               |                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                       |
|               |                               RepartitionExec: partitioning=Hash([ps_suppkey@1], 4), input_partitions=4                                                                                                                                                                                                                                                       |
|               |                                 BytesProcessedExec                                                                                                                                                                                                                                                                                                            |
|               |                                   ParquetExec: file_groups={4 groups: [[tpch/partsupp/partsupp.parquet:0..10424332], [tpch/partsupp/partsupp.parquet:10424332..20848664], [tpch/partsupp/partsupp.parquet:20848664..31272996], [tpch/partsupp/partsupp.parquet:31272996..41697328]]}, projection=[ps_partkey, ps_suppkey, ps_availqty, ps_supplycost]         |
|               |                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                       |
|               |                               RepartitionExec: partitioning=Hash([s_suppkey@0], 4), input_partitions=4                                                                                                                                                                                                                                                        |
|               |                                 BytesProcessedExec                                                                                                                                                                                                                                                                                                            |
|               |                                   RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                                                                        |
|               |                                     ParquetExec: file_groups={1 group: [[tpch/supplier/supplier.parquet]]}, projection=[s_suppkey, s_nationkey]                                                                                                                                                                                                               |
|               |                     CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                               |
|               |                       RepartitionExec: partitioning=Hash([n_nationkey@0], 4), input_partitions=4                                                                                                                                                                                                                                                              |
|               |                         ProjectionExec: expr=[n_nationkey@0 as n_nationkey]                                                                                                                                                                                                                                                                                   |
|               |                           BytesProcessedExec                                                                                                                                                                                                                                                                                                                  |
|               |                             RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                                                                              |
|               |                               CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                     |
|               |                                 FilterExec: n_name@1 = GERMANY                                                                                                                                                                                                                                                                                                |
|               |                                   ParquetExec: file_groups={1 group: [[tpch/nation/nation.parquet]]}, projection=[n_nationkey, n_name], predicate=n_name@1 = GERMANY, pruning_predicate=CASE WHEN n_name_null_count@2 = n_name_row_count@3 THEN false ELSE n_name_min@0 <= GERMANY AND GERMANY <= n_name_max@1 END, required_guarantees=[N] |
|               |       ProjectionExec: expr=[CAST(CAST(sum(partsupp.ps_supplycost * partsupp.ps_availqty)@0 AS Float64) * 0.0001 AS Decimal128(38, 15)) as sum(partsupp.ps_supplycost * partsupp.ps_availqty) * Float64(0.0001)]                                                                                                                                               |
|               |         AggregateExec: mode=Final, gby=[], aggr=[sum(partsupp.ps_supplycost * partsupp.ps_availqty)]                                                                                                                                                                                                                                                          |
|               |           CoalescePartitionsExec                                                                                                                                                                                                                                                                                                                              |
|               |             AggregateExec: mode=Partial, gby=[], aggr=[sum(partsupp.ps_supplycost * partsupp.ps_availqty)]                                                                                                                                                                                                                                                    |
|               |               CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                     |
|               |                 HashJoinExec: mode=Partitioned, join_type=Inner, on=[(n_nationkey@0, s_nationkey@2)], projection=[ps_availqty@1, ps_supplycost@2]                                                                                                                                                                                                             |
|               |                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                 |
|               |                     RepartitionExec: partitioning=Hash([n_nationkey@0], 4), input_partitions=4                                                                                                                                                                                                                                                                |
|               |                       RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                                                                                    |
|               |                         ProjectionExec: expr=[n_nationkey@0 as n_nationkey]                                                                                                                                                                                                                                                                                   |
|               |                           CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                         |
|               |                             FilterExec: n_name@1 = GERMANY                                                                                                                                                                                                                                                                                                    |
|               |                               ParquetExec: file_groups={1 group: [[tpch/nation/nation.parquet]]}, projection=[n_nationkey, n_name], predicate=n_name@1 = GERMANY, pruning_predicate=CASE WHEN n_name_null_count@2 = n_name_row_count@3 THEN false ELSE n_name_min@0 <= GERMANY AND GERMANY <= n_name_max@1 END, required_guarantees=[N]     |
|               |                   CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                                 |
|               |                     RepartitionExec: partitioning=Hash([s_nationkey@2], 4), input_partitions=4                                                                                                                                                                                                                                                                |
|               |                       ProjectionExec: expr=[ps_availqty@1 as ps_availqty, ps_supplycost@2 as ps_supplycost, s_nationkey@0 as s_nationkey]                                                                                                                                                                                                                     |
|               |                         CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                           |
|               |                           HashJoinExec: mode=Partitioned, join_type=Inner, on=[(s_suppkey@0, ps_suppkey@0)], projection=[s_nationkey@1, ps_availqty@3, ps_supplycost@4]                                                                                                                                                                                       |
|               |                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                       |
|               |                               RepartitionExec: partitioning=Hash([s_suppkey@0], 4), input_partitions=4                                                                                                                                                                                                                                                        |
|               |                                 RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1                                                                                                                                                                                                                                                          |
|               |                                   ParquetExec: file_groups={1 group: [[tpch/supplier/supplier.parquet]]}, projection=[s_suppkey, s_nationkey]                                                                                                                                                                                                                 |
|               |                             CoalesceBatchesExec: target_batch_size=8192                                                                                                                                                                                                                                                                                       |
|               |                               RepartitionExec: partitioning=Hash([ps_suppkey@0], 4), input_partitions=4                                                                                                                                                                                                                                                       |
|               |                                 ParquetExec: file_groups={4 groups: [[tpch/partsupp/partsupp.parquet:0..10424332], [tpch/partsupp/partsupp.parquet:10424332..20848664], [tpch/partsupp/partsupp.parquet:20848664..31272996], [tpch/partsupp/partsupp.parquet:31272996..41697328]]}, projection=[ps_suppkey, ps_availqty, ps_supplycost]                       |
|               |                                                                                                                                                                                                                                                                                                                                                               |
+---------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
