[package]
description = "The spiced runtime"
edition.workspace = true
homepage.workspace = true
license.workspace = true
name = "runtime"
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[dependencies]
app = { path = "../app" }
arrow-flight = { workspace = true, features = ["flight-sql-experimental"] }
arrow-ipc.workspace = true
arrow-json.workspace = true
arrow.workspace = true
arrow_sql_gen = { path = "../arrow_sql_gen" }
arrow_tools = { path = "../arrow_tools" }
async-openai.workspace = true
async-stream.workspace = true
async-trait.workspace = true
aws-config = { version = "1.1.10", optional = true }
aws-sdk-secretsmanager = { version = "1.21.0", optional = true }
aws-sdk-sts = { version = "1.19.0", optional = true }
axum = { version = "0.7.4", features = ["macros"] }
axum-extra = { version = "0.9.3", features = ["typed-header"] }
base64.workspace = true
bytes = { version = "1", default-features = false }
cache = { path = "../cache" }
chrono = { version = "0.4.38" }
clap.workspace = true
clickhouse-rs = { workspace = true, optional = true }
csv = "1.3.0"
dashmap = "5.5.3"
data_components = { path = "../data_components" }
datafusion-federation = { workspace = true }
datafusion-table-providers = { workspace = true }
datafusion.workspace = true
db_connection_pool = { path = "../db_connection_pool" }
dotenvy.workspace = true
duckdb = { workspace = true, features = [
  "bundled",
  "r2d2",
  "vtab",
  "vtab-arrow",
], optional = true }
flight_client = { path = "../flight_client" }
fundu = { workspace = true }
futures.workspace = true
globset.workspace = true
headers-accept = "0.1.3"
http = "1.1.0"
http-body-util = "0.1.2"
hyper = "1.4.1"
hyper-util = "0.1.6"
indexmap = "2"
itertools.workspace = true
keyring = { version = "2.3.2", optional = true }
llms = { path = "../llms" }
logos = "0.14.0"
mediatype = "0.19.18"
metrics.workspace = true
metrics-exporter-prometheus = { workspace = true }
model_components = { path = "../model_components" }
mysql_async = { workspace = true, optional = true }
notify = "6.1.1"
ns_lookup = { path = "../ns_lookup" }
object_store = { workspace = true, features = ["aws", "http"] }
once_cell = "1.19.0"
opentelemetry-proto = { version = "0.6.0", features = [
  "gen-tonic-messages",
  "gen-tonic",
  "metrics",
] }
pin-project = "1.0"
prometheus-parse = "0.2.5"
prost = { version = "0.12.1", default-features = false, features = [
  "prost-derive",
] }
regex.workspace = true
reqwest = { version = "0.11.24", features = ["json", "rustls-tls"] }
rustls.workspace = true
rustls-pemfile.workspace = true
secrecy.workspace = true
serde.workspace = true
serde_json.workspace = true
snafu.workspace = true
snowflake-api = { workspace = true, optional = true }
spicepod = { path = "../spicepod" }
ssh2 = { workspace = true, optional = true }
suppaftp = { workspace = true, optional = true }
tokio-rusqlite = { workspace = true, optional = true }
tokio-rustls = "0.26.0"
tokio.workspace = true
tonic-health.workspace = true
tonic.workspace = true
tracing.workspace = true
tract-core = "0.21.0"
url = "2.5.0"
util = { path = "../util" }
uuid.workspace = true
x509-certificate.workspace = true

[dev-dependencies]
anyhow = "1.0.86"
async-graphql = "7.0.5"
async-graphql-axum = "7.0.5"
bollard = "0.16.1"
metrics-util = { git = "https://github.com/spiceai/metrics.git", rev = "b7aa6388e08f395fc6e361a5ff13174ebd4562fe" }
rand = "0.8.5"
spice-cloud = { path = "../spice_cloud" }
tracing-subscriber.workspace = true

[features]
aws-secrets-manager = [
  "dep:aws-config",
  "dep:aws-sdk-secretsmanager",
  "dep:aws-sdk-sts",
]
clickhouse = [
  "dep:clickhouse-rs",
  "db_connection_pool/clickhouse",
  "arrow_sql_gen/clickhouse",
  "data_components/clickhouse",
]
databricks = ["data_components/databricks"]
debezium = ["data_components/debezium"]
default = ["keyring-secret-store", "aws-secrets-manager"]
delta_lake = ["data_components/delta_lake"]
dev = []
dremio = []
duckdb = ["dep:duckdb", "db_connection_pool/duckdb", "data_components/duckdb"]
flightsql = ["data_components/flightsql"]
ftp = ["dep:suppaftp", "dep:ssh2"]
keyring-secret-store = ["dep:keyring"]
models = ["model_components/full", "llms/mistralrs", "llms/candle"]
mysql = ["dep:mysql_async", "db_connection_pool/mysql", "data_components/mysql"]
odbc = ["db_connection_pool/odbc", "data_components/odbc"]
postgres = [
  "db_connection_pool/postgres",
  "data_components/postgres",
  "datafusion-table-providers/postgres",
]
snowflake = [
  "dep:snowflake-api",
  "db_connection_pool/snowflake",
  "data_components/snowflake",
]
spark = ["data_components/spark_connect"]
sqlite = [
  "dep:tokio-rusqlite",
  "db_connection_pool/sqlite",
  "data_components/sqlite",
]

[[bench]]
harness = false
name = "bench"
